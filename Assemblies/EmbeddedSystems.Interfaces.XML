<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EmbeddedSystems.Interfaces</name>
    </assembly>
    <members>
        <member name="T:EmbeddedSystems.Persistence.IPersistenceContext">
            <summary>
            Implementing classes define methods of accessing the persistence layer.
            </summary>
        </member>
        <member name="P:EmbeddedSystems.Persistence.IPersistenceContext.AudioFiles">
            <summary>
            Gets or sets the <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/> set.
            </summary>
        </member>
        <member name="P:EmbeddedSystems.Persistence.IPersistenceContext.Customers">
            <summary>
            Gets or sets the <see cref="T:EmbeddedSystems.DomainModel.Customer"/> set.
            </summary>
        </member>
        <member name="P:EmbeddedSystems.Persistence.IPersistenceContext.Exhibits">
            <summary>
            Gets or sets the <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/> set.
            </summary>
        </member>
        <member name="P:EmbeddedSystems.Persistence.IPersistenceContext.Handsets">
            <summary>
            Gets or sets the <see cref="T:EmbeddedSystems.DomainModel.Handset"/> set.
            </summary>
        </member>
        <member name="P:EmbeddedSystems.Persistence.IPersistenceContext.HandsetRentals">
            <summary>
            Gets or sets the <see cref="T:EmbeddedSystems.DomainModel.HandsetRental"/> set.
            </summary>
        </member>
        <member name="P:EmbeddedSystems.Persistence.IPersistenceContext.KnowledgeLevels">
            <summary>
            Gets or sets the <see cref="T:EmbeddedSystems.DomainModel.KnowledgeLevel"/> set.
            </summary>
        </member>
        <member name="P:EmbeddedSystems.Persistence.IPersistenceContext.Languages">
            <summary>
            Gets or sets the <see cref="T:EmbeddedSystems.DomainModel.Language"/> set.
            </summary>
        </member>
        <member name="T:EmbeddedSystems.Persistence.IRepository">
            <summary>
            Non-generic base interface so that repos can be held in invariant collections.
            </summary>
        </member>
        <member name="T:EmbeddedSystems.Persistence.IRepository`1">
            <summary>
            Implementing classes define methods for managing a persistence source of a given type.
            </summary>
            <typeparam name="TEntity">
            The type of entity that this <see cref="T:EmbeddedSystems.Persistence.IRepository`1"/> should manage.
            </typeparam>
        </member>
        <member name="M:EmbeddedSystems.Persistence.IRepository`1.Add(`0)">
            <summary>
            Place a <typeparamref name="TEntity"/> into the <see cref="T:EmbeddedSystems.Persistence.IRepository`1"/>.
            </summary>
            <param name="entity">The <typeparamref name="TEntity"/> to add.</param>
        </member>
        <member name="M:EmbeddedSystems.Persistence.IRepository`1.Update(`0)">
            <summary>
            Change a <typeparamref name="TEntity"/>.
            </summary>
            <param name="entity">The <typeparamref name="TEntity"/> to change.</param>
        </member>
        <member name="M:EmbeddedSystems.Persistence.IRepository`1.Delete(`0)">
            <summary>
            Remove a <typeparamref name="TEntity"/>.
            </summary>
            <param name="entity">The <typeparamref name="TEntity"/> to remove.</param>
        </member>
        <member name="M:EmbeddedSystems.Persistence.IRepository`1.Delete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Delete a group of <typeparamref name="TEntity"/>s using a given criterion.
            </summary>
            <param name="where">The criteria by which to delete <typeparamref name="TEntity"/>s.</param>
        </member>
        <member name="M:EmbeddedSystems.Persistence.IRepository`1.Single(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Get a <typeparamref name="TEntity"/> using a given criterion where it would be expected
            that only one should be found.
            </summary>
            <param name="where">The criteria by which to find the <typeparamref name="TEntity"/>.</param>
            <returns>The <typeparamref name="TEntity"/> or null if none could be found.</returns>
        </member>
        <member name="M:EmbeddedSystems.Persistence.IRepository`1.First(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Get the first <typeparamref name="TEntity"/> from a collection derived from a given
            criterion.
            </summary>
            <param name="where">The criteria by which to find the <typeparamref name="TEntity"/>.</param>
            <returns>The first <typeparamref name="TEntity"/> or null if none could be found.</returns>
        </member>
        <member name="M:EmbeddedSystems.Persistence.IRepository`1.GetAll">
            <summary>
            Retrieve all the known <typeparamref name="TEntity"/>s.
            </summary>
            <returns>All the known <typeparamref name="TEntity"/>s.</returns>
        </member>
        <member name="M:EmbeddedSystems.Persistence.IRepository`1.GetMany(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Retrieve a collection of <typeparamref name="TEntity"/>s defined by a criterion.
            </summary>
            <param name="where">The criteria by which to find the <typeparamref name="TEntity"/>s.</param>
            <returns>A collection of <typeparamref name="TEntity"/>s.</returns>
        </member>
        <member name="T:EmbeddedSystems.Persistence.IUnitOfWork">
            <summary>
            Implementing classes define a class to store a database context to be injected into services so they all shared
            the same data resource.
            </summary>
        </member>
        <member name="M:EmbeddedSystems.Persistence.IUnitOfWork.Commit">
            <summary>
            Save call changes that have been made to the context.
            </summary>
        </member>
        <member name="M:EmbeddedSystems.Persistence.IUnitOfWork.GetRepository``1">
            <summary>
            Retrieve an instance of <see cref="T:EmbeddedSystems.Persistence.IRepository"/> to access the persistence layer.
            </summary>
            <typeparam name="T">The type of <see cref="T:EmbeddedSystems.Persistence.IRepository"/> to create.</typeparam>
            <returns>An instance of <see cref="T:EmbeddedSystems.Persistence.IRepository"/> to access the persistence layer.</returns>
        </member>
        <member name="P:EmbeddedSystems.Persistence.IUnitOfWork.CurrentContext">
            <summary>
            Gets the active <see cref="T:System.Data.Entity.DbContext"/> for this <see cref="T:EmbeddedSystems.Persistence.IUnitOfWork"/>.
            </summary>
        </member>
        <member name="T:EmbeddedSystems.Security.IAuthenticatedHandset">
            <summary>
            Implementing classes define an <see cref="T:System.Security.Principal.IIdentity"/> that represents a <see cref="T:EmbeddedSystems.DomainModel.Handset"/>
            being used.
            </summary>
        </member>
        <member name="P:EmbeddedSystems.Security.IAuthenticatedHandset.Rental">
            <summary>
            Gets the <see cref="T:EmbeddedSystems.DomainModel.HandsetRental"/> object.
            </summary>
        </member>
        <member name="T:EmbeddedSystems.Security.IAuthorizationService">
            <summary>
            Implementing classes define methods to authenticate a <see cref="T:EmbeddedSystems.DomainModel.Handset"/>.
            </summary>
        </member>
        <member name="M:EmbeddedSystems.Security.IAuthorizationService.AuthenticateHandsetRental(System.String,System.Int32)">
            <summary>
            Confirm that a handset can be used using the given <paramref name="pin"/>.
            </summary>
            <param name="handsetNumber">The <see cref="T:EmbeddedSystems.DomainModel.Handset"/> unique identifier.</param>
            <param name="pin">The identification number to authorize the use of the <see cref="T:EmbeddedSystems.DomainModel.Handset"/>.</param>
            <returns>
            The <see cref="T:EmbeddedSystems.DomainModel.HandsetRental"/> represented by the given information or null if the information
            does not correspond to a valid <see cref="T:EmbeddedSystems.DomainModel.HandsetRental"/>.
            </returns>
        </member>
        <member name="T:EmbeddedSystems.ServiceLayer.IAudioFileService">
            <summary>
            Implementing classes define methods to interact with <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/>s.
            </summary>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IAudioFileService.GetFile(EmbeddedSystems.DomainModel.Exhibit,EmbeddedSystems.DomainModel.KnowledgeLevel,EmbeddedSystems.DomainModel.Language)">
            <summary>
            Retrieve an <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/>.
            </summary>
            <param name="exhibit">The <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/> to get the audio file for.</param>
            <param name="knowledgeLevel">The <see cref="T:EmbeddedSystems.DomainModel.KnowledgeLevel"/> of the <see cref="T:EmbeddedSystems.DomainModel.Customer"/> so they get the right <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/>.</param>
            <param name="language">The <see cref="T:EmbeddedSystems.DomainModel.Language"/> of the <see cref="T:EmbeddedSystems.DomainModel.Customer"/> so they get the right <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/>.</param>
            <returns>An <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/> that corresponds to the given information.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IAudioFileService.GetFilesForExhibit(System.Int32)">
            <summary>
            Retrieve all the <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/>s for a given <paramref name="exhibitId"/>.
            </summary>
            <param name="exhibitId">The unique identifier of the <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>.</param>
            <returns>All the <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/>s for a given <paramref name="exhibitId"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IAudioFileService.GetAll">
            <summary>
            Retrieve all known <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/>s.
            </summary>
            <returns>All known <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/>s.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IAudioFileService.CreateAudioFile(EmbeddedSystems.DomainModel.AudioFile)">
            <summary>
            Build and persist a new <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/>.
            </summary>
            <param name="audioFile">A new <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/></param>
            <returns>The persisted Audio File.</returns>
        </member>
        <member name="T:EmbeddedSystems.ServiceLayer.ICustomerService">
            <summary>
            Implementing classes define methods for interacting with <see cref="T:EmbeddedSystems.DomainModel.Customer"/>s.
            </summary>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.ICustomerService.GetCustomer(System.Int32)">
            <summary>
            Retrieve a <see cref="T:EmbeddedSystems.DomainModel.Customer"/>.
            </summary>
            <param name="customerId">The unique identifier of the <see cref="T:EmbeddedSystems.DomainModel.Customer"/>.</param>
            <returns>The <see cref="T:EmbeddedSystems.DomainModel.Customer"/> that matches the given <paramref name="customerId"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.ICustomerService.CreateCustomer(System.String,System.String,System.String,System.String,EmbeddedSystems.DomainModel.Language,EmbeddedSystems.DomainModel.KnowledgeLevel)">
            <summary>
            Will create a new customer and return it.
            </summary>
            <param name="name">The name for the new customer.</param>
            <param name="email">The email address of the new customer.</param>
            <param name="mobile">The mobile number for the new customer.</param>
            <param name="address">The address for the new customer.</param>
            <param name="language">The language for the new customer.</param>
            <param name="knowledgeLevel">The knowledge level of the new customer.</param>
            <returns>The new customer.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.ICustomerService.CreateCustomer(EmbeddedSystems.DomainModel.Customer)">
            <summary>
            Create a new customer with a customer object.
            </summary>
            <param name="customer">The customer to save to the database.</param>
            <returns>The newly created customer.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.ICustomerService.GetAllCustomers">
            <summary>
            Get all of the customers.
            </summary>
            <returns>A collection containing all customers.</returns>
        </member>
        <member name="T:EmbeddedSystems.ServiceLayer.IExhibitService">
            <summary>
            Implementing classes define methods for interacting with <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>s.
            </summary>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IExhibitService.GetExhibit(System.Int32)">
            <summary>
            Retrieve an <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>.
            </summary>
            <param name="exhibitId">The unique identifier of the <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>.</param>
            <returns>The <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/> that matches the given <paramref name="exhibitId"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IExhibitService.GetExhibitByHandsetKey(System.Int32)">
            <summary>
            Retrieve an <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>.
            </summary>
            <param name="handsetKey">The key number on the handset for this <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>.</param>
            <returns>The <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/> with the given <paramref name="handsetKey"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IExhibitService.GetAll">
            <summary>
            Retrieve all known <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>s.
            </summary>
            <returns>All known <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>s.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IExhibitService.CreateExhibit(EmbeddedSystems.DomainModel.Exhibit)">
            <summary>
            Build and persist a new <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>.
            </summary>
            <param name="exhibit">A new <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/></param>
            <returns>The persisted <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>.</returns>
        </member>
        <member name="T:EmbeddedSystems.ServiceLayer.IHandsetService">
            <summary>
            Implementing classes define methods for interacting with <see cref="T:EmbeddedSystems.DomainModel.Handset"/>s.
            </summary>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IHandsetService.GetRentalsOfHandset(System.String)">
            <summary>
            Get the <see cref="T:EmbeddedSystems.DomainModel.HandsetRental"/>s for a given <see cref="T:EmbeddedSystems.DomainModel.Handset"/>.
            </summary>
            <param name="handsetNumber">The unique identifier of the <see cref="T:EmbeddedSystems.DomainModel.Handset"/>.</param>
            <returns>A collection of the <see cref="T:EmbeddedSystems.DomainModel.HandsetRental"/>s for the given <see cref="T:EmbeddedSystems.DomainModel.Handset"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IHandsetService.RentHandset(EmbeddedSystems.DomainModel.Customer)">
            <summary>
            Set a <see cref="T:EmbeddedSystems.DomainModel.Handset"/> to be rented.
            </summary>
            <param name="customer">The customer renting the handset.</param>
            <returns>A new handset rental.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IHandsetService.GetAvailableHandsets(System.DateTime)">
            <summary>
            Get the available handsets.
            </summary>
            <param name="dateAvailableFrom">The DateTime you want to check.</param>
            <returns>A collection of available handsets.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IHandsetService.GetAllRentalsForCustomer(System.Int32)">
            <summary>
            Get all of the handsets for a given customer.
            </summary>
            <param name="customerId">The id of the customer.</param>
            <returns>A collection containing all of the rentals belonging to a customer.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IHandsetService.GetAllRentals">
            <summary>
            Get all of the rentals that have occurred.
            </summary>
            <returns>All of the rentals.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IHandsetService.GetAllHandsets">
            <summary>
            Get all of the handsets.
            </summary>
            <returns>Return a collection of all the handsets.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IHandsetService.GetHandset(System.Int32)">
            <summary>
            Get a handset by a given id.
            </summary>
            <param name="handsetId">The id of the requested handset.</param>
            <returns>The handset.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IHandsetService.GetCurrentRentalForHandset(System.Int32)">
            <summary>
            Retrieve the details of the current <see cref="T:EmbeddedSystems.DomainModel.HandsetRental"/> for a given <paramref name="handsetId"/>.
            </summary>
            <param name="handsetId">The unique identifier of the <see cref="T:EmbeddedSystems.DomainModel.Handset"/>.</param>
            <returns>The details of the current <see cref="T:EmbeddedSystems.DomainModel.HandsetRental"/> for a given <paramref name="handsetId"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IHandsetService.ExpireRental(EmbeddedSystems.DomainModel.HandsetRental)">
            <summary>
            Set a <see cref="T:EmbeddedSystems.DomainModel.HandsetRental"/> to be inactive now.
            </summary>
            <param name="rental">The <see cref="T:EmbeddedSystems.DomainModel.HandsetRental"/> to deactivate.</param>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IHandsetService.CreateHandset(System.String)">
            <summary>
            Build and persist a new <see cref="T:EmbeddedSystems.DomainModel.Handset"/>.
            </summary>
            <param name="handsetNumber">A new <see cref="T:EmbeddedSystems.DomainModel.Handset"/></param>
            <returns>The persisted <see cref="T:EmbeddedSystems.DomainModel.Handset"/>.</returns>
        </member>
        <member name="T:EmbeddedSystems.ServiceLayer.IKnowledgeLevelService">
            <summary>
            Interface for the KnowledgeLevelService.
            </summary>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IKnowledgeLevelService.GetAll">
            <summary>
            Get all of the knowledge levels.
            </summary>
            <returns>A collection containing all of the knowledge levels.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IKnowledgeLevelService.GetKnowledgeLevel(System.Int32)">
            <summary>
            Get a Knowledge level by id.
            </summary>
            <param name="knowledgeLevelId">The id of the required knowledge level.</param>
            <returns>The knowledge level requested.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IKnowledgeLevelService.AddKnowledgeLevel(System.String)">
            <summary>
            Build and persist a new <see cref="T:EmbeddedSystems.DomainModel.KnowledgeLevel"/>.
            </summary>
            <param name="knowledgeLevelDesc">A new <see cref="T:EmbeddedSystems.DomainModel.KnowledgeLevel"/></param>
            <returns>The persisted <see cref="T:EmbeddedSystems.DomainModel.KnowledgeLevel"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.IKnowledgeLevelService.AddKnowledgeLevel(EmbeddedSystems.DomainModel.KnowledgeLevel)">
            <summary>
            Build and persist a new <see cref="T:EmbeddedSystems.DomainModel.KnowledgeLevel"/>.
            </summary>
            <param name="knowledgeLevel">A new <see cref="T:EmbeddedSystems.DomainModel.KnowledgeLevel"/></param>
            <returns>The persisted <see cref="T:EmbeddedSystems.DomainModel.KnowledgeLevel"/>.</returns>
        </member>
        <member name="T:EmbeddedSystems.ServiceLayer.ILanguageService">
            <summary>
            Implementing classes define methods for interacting with <see cref="T:EmbeddedSystems.DomainModel.Language"/>s.
            </summary>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.ILanguageService.GetLanguage(System.Int32)">
            <summary>
            Retrieve a <see cref="T:EmbeddedSystems.DomainModel.Language"/>.
            </summary>
            <param name="languageId">The unique identifier of the <see cref="T:EmbeddedSystems.DomainModel.Language"/>.</param>
            <returns>The <see cref="T:EmbeddedSystems.DomainModel.Language"/> that matches the given <paramref name="languageId"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.ILanguageService.GetAll">
            <summary>
            Retrieve all <see cref="T:EmbeddedSystems.DomainModel.Language"/>s.
            </summary>
            <returns>All of the <see cref="T:EmbeddedSystems.DomainModel.Language"/>s in the DB.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.ILanguageService.AddLanguage(System.String)">
            <summary>
            Build and persist a new <see cref="T:EmbeddedSystems.DomainModel.Language"/>.
            </summary>
            <param name="languageName">A new <see cref="T:EmbeddedSystems.DomainModel.Language"/></param>
            <returns>The persisted <see cref="T:EmbeddedSystems.DomainModel.Language"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.ILanguageService.AddLanguage(EmbeddedSystems.DomainModel.Language)">
            <summary>
            Build and persist a new <see cref="T:EmbeddedSystems.DomainModel.Language"/>.
            </summary>
            <param name="language">A new <see cref="T:EmbeddedSystems.DomainModel.Language"/></param>
            <returns>The persisted <see cref="T:EmbeddedSystems.DomainModel.Language"/>.</returns>
        </member>
    </members>
</doc>
