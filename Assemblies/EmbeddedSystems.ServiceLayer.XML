<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EmbeddedSystems.ServiceLayer</name>
    </assembly>
    <members>
        <member name="T:EmbeddedSystems.ServiceLayer.AudioFileService">
            <summary>
            A class for interacting with <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/>s.
            </summary>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.AudioFileService.#ctor(EmbeddedSystems.Persistence.IUnitOfWork)">
            <summary>
            Initialises a new instance of the <see cref="T:EmbeddedSystems.ServiceLayer.AudioFileService"/> class.
            </summary>
            <param name="persistence">The current persistence context.</param>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.AudioFileService.GetFile(EmbeddedSystems.DomainModel.Exhibit,EmbeddedSystems.DomainModel.KnowledgeLevel,EmbeddedSystems.DomainModel.Language)">
            <summary>
            Retrieve an <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/>.
            </summary>
            <param name="exhibit">The <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/> to get the audio file for.</param>
            <param name="knowledgeLevel">The <see cref="T:EmbeddedSystems.DomainModel.KnowledgeLevel"/> of the <see cref="T:EmbeddedSystems.DomainModel.Customer"/> so they get the right <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/>.</param>
            <param name="language">The <see cref="T:EmbeddedSystems.DomainModel.Language"/> of the <see cref="T:EmbeddedSystems.DomainModel.Customer"/> so they get the right <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/>.</param>
            <returns>An <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/> that corresponds to the given information.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.AudioFileService.GetFilesForExhibit(System.Int32)">
            <summary>
            Retrieve all the <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/>s for a given <paramref name="exhibitId"/>.
            </summary>
            <param name="exhibitId">The unique identifier of the <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>.</param>
            <returns>All the <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/>s for a given <paramref name="exhibitId"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.AudioFileService.GetAll">
            <summary>
            Retrieve all known <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/>s.
            </summary>
            <returns>All known <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/>s.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.AudioFileService.CreateAudioFile(EmbeddedSystems.DomainModel.AudioFile)">
            <summary>
            Build and persist a new <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/>.
            </summary>
            <param name="audioFile">A new <see cref="T:EmbeddedSystems.DomainModel.AudioFile"/></param>
            <returns>The persisted Audio File.</returns>
        </member>
        <member name="T:EmbeddedSystems.ServiceLayer.AdministratorService">
            <summary>
            A class for interacting with <see cref="T:EmbeddedSystems.DomainModel.Customer"/>s.
            </summary>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.AdministratorService.#ctor(EmbeddedSystems.Persistence.IUnitOfWork)">
            <summary>
            Initialises a new instance of the <see cref="T:EmbeddedSystems.ServiceLayer.CustomerService"/> class.
            </summary>
            <param name="persistence">The current persistence context.</param>
        </member>
        <member name="T:EmbeddedSystems.ServiceLayer.CustomerService">
            <summary>
            A class for interacting with <see cref="T:EmbeddedSystems.DomainModel.Customer"/>s.
            </summary>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.CustomerService.#ctor(EmbeddedSystems.Persistence.IUnitOfWork)">
            <summary>
            Initialises a new instance of the <see cref="T:EmbeddedSystems.ServiceLayer.CustomerService"/> class.
            </summary>
            <param name="persistence">The current persistence context.</param>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.CustomerService.GetCustomer(System.Int32)">
            <summary>
            Retrieve a <see cref="T:EmbeddedSystems.DomainModel.Customer"/>.
            </summary>
            <param name="customerId">The unique identifier of the <see cref="T:EmbeddedSystems.DomainModel.Customer"/>.</param>
            <returns>The <see cref="T:EmbeddedSystems.DomainModel.Customer"/> that matches the given <paramref name="customerId"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.CustomerService.CreateCustomer(System.String,System.String,System.String,System.String,EmbeddedSystems.DomainModel.Language,EmbeddedSystems.DomainModel.KnowledgeLevel)">
            <summary>
            Create a new customer.
            </summary>
            <param name="name">The name of the new customer.</param>
            <param name="email">The email address of the new customer.</param>
            <param name="mobile">The mobile number of the new customer.</param>
            <param name="address">The address of the new customer.</param>
            <param name="language">The language of the new customer.</param>
            <param name="knowledgeLevel">The knowledge level of the new customer.</param>
            <returns>The newly created customer.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.CustomerService.CreateCustomer(EmbeddedSystems.DomainModel.Customer)">
            <summary>
            Create a new customer with a given customer object.
            </summary>
            <param name="customer">The customer to be added.</param>
            <returns>The newly created customer.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.CustomerService.GetAllCustomers">
            <summary>
            Get all of the customers.
            </summary>
            <returns>All of the customers.</returns>
        </member>
        <member name="T:EmbeddedSystems.ServiceLayer.ExhibitService">
            <summary>
            A class for interacting with <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>s.
            </summary>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.ExhibitService.#ctor(EmbeddedSystems.Persistence.IUnitOfWork)">
            <summary>
            Initialises a new instance of the <see cref="T:EmbeddedSystems.ServiceLayer.ExhibitService"/> class.
            </summary>
            <param name="persistence">The current persistence context.</param>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.ExhibitService.GetExhibit(System.Int32)">
            <summary>
            Retrieve an <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>.
            </summary>
            <param name="exhibitId">The unique identifier of the <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>.</param>
            <returns>The <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/> that matches the given <paramref name="exhibitId"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.ExhibitService.GetExhibitByHandsetKey(System.Int32)">
            <summary>
            Retrieve an <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>.
            </summary>
            <param name="handsetKey">The key number on the handset for this <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>.</param>
            <returns>The <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/> with the given <paramref name="handsetKey"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.ExhibitService.GetAll">
            <summary>
            Retrieve all known <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>s.
            </summary>
            <returns>All known <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>s.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.ExhibitService.CreateExhibit(EmbeddedSystems.DomainModel.Exhibit)">
            <summary>
            Build and persist a new <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>.
            </summary>
            <param name="exhibit">A new <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/></param>
            <returns>The persisted <see cref="T:EmbeddedSystems.DomainModel.Exhibit"/>.</returns>
        </member>
        <member name="T:EmbeddedSystems.ServiceLayer.HandsetService">
            <summary>
            A class for interacting with <see cref="T:EmbeddedSystems.DomainModel.Handset"/>s.
            </summary>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.HandsetService.#ctor(EmbeddedSystems.Persistence.IUnitOfWork)">
            <summary>
            Initialises a new instance of the <see cref="T:EmbeddedSystems.ServiceLayer.HandsetService"/> class.
            </summary>
            <param name="persistence">The current persistence context.</param>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.HandsetService.GetRentalsOfHandset(System.String)">
            <summary>
            Get the <see cref="T:EmbeddedSystems.DomainModel.HandsetRental"/>s for a given <see cref="T:EmbeddedSystems.DomainModel.Handset"/>.
            </summary>
            <param name="handsetNumber">The unique identifier of the <see cref="T:EmbeddedSystems.DomainModel.Handset"/>.</param>
            <returns>A collection of the <see cref="T:EmbeddedSystems.DomainModel.HandsetRental"/>s for the given <see cref="T:EmbeddedSystems.DomainModel.Handset"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.HandsetService.RentHandset(EmbeddedSystems.DomainModel.Customer)">
            <summary>
            Rent a handset.
            </summary>
            <param name="customer">The customer requesting the handset rental.</param>
            <returns>A new handset rental.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.HandsetService.GetAllRentalsForCustomer(System.Int32)">
            <summary>
            Get all rentals for a given customer.
            </summary>
            <param name="customerId">The id of the customer.</param>
            <returns>A collection of handset rentals belonging to a customer.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.HandsetService.GetAvailableHandsets(System.DateTime)">
            <summary>
            Get the available handsets.
            </summary>
            <param name="dateAvailableFrom">The date from which will be checked.</param>
            <returns>A collection of available handsets.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.HandsetService.GetAllRentals">
            <summary>
            Get all of the rentals that have occurred.
            </summary>
            <returns>All of the rentals.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.HandsetService.GetAllHandsets">
            <summary>
            Get all of the handsets.
            </summary>
            <returns>Return a collection of all the handsets.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.HandsetService.GetHandset(System.Int32)">
            <summary>
            Get a handset by a given id.
            </summary>
            <param name="handsetId">The id of the requested handset.</param>
            <returns>The handset.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.HandsetService.GetCurrentRentalForHandset(System.Int32)">
            <summary>
            Retrieve the details of the current <see cref="T:EmbeddedSystems.DomainModel.HandsetRental"/> for a given <paramref name="handsetId"/>.
            </summary>
            <param name="handsetId">The unique identifier of the <see cref="T:EmbeddedSystems.DomainModel.Handset"/>.</param>
            <returns>The details of the current <see cref="T:EmbeddedSystems.DomainModel.HandsetRental"/> for a given <paramref name="handsetId"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.HandsetService.ExpireRental(EmbeddedSystems.DomainModel.HandsetRental)">
            <summary>
            Set a <see cref="T:EmbeddedSystems.DomainModel.HandsetRental"/> to be inactive now.
            </summary>
            <param name="rental">The <see cref="T:EmbeddedSystems.DomainModel.HandsetRental"/> to deactivate.</param>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.HandsetService.CreateHandset(System.String)">
            <summary>
            Build and persist a new <see cref="T:EmbeddedSystems.DomainModel.Handset"/>.
            </summary>
            <param name="handsetNumber">A new <see cref="T:EmbeddedSystems.DomainModel.Handset"/></param>
            <returns>The persisted <see cref="T:EmbeddedSystems.DomainModel.Handset"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.HandsetService.GeneratePin">
            <summary>
            Generate a 4 digit pin number.
            </summary>
            <returns>The generated pin number.</returns>
        </member>
        <member name="T:EmbeddedSystems.ServiceLayer.KnowledgeLevelService">
            <summary>
            Methods for getting and setting information about knowledge levels.
            </summary>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.KnowledgeLevelService.#ctor(EmbeddedSystems.Persistence.IUnitOfWork)">
            <summary>
            Initialises a new instance of the <see cref="T:EmbeddedSystems.ServiceLayer.KnowledgeLevelService"/> class.
            </summary>
            <param name="persistence">Inject the unit of work so that database calls can be made.</param>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.KnowledgeLevelService.GetKnowledgeLevel(System.Int32)">
            <summary>
            Get the knowledge level by id.
            </summary>
            <param name="knowledgeLevelId">The id of the knowledge level.</param>
            <returns>The knowledge level requested.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.KnowledgeLevelService.GetAll">
            <summary>
            Get a collection of all the knowledge level.
            </summary>
            <returns>The collection of knowledge levels.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.KnowledgeLevelService.AddKnowledgeLevel(System.String)">
            <summary>
            Build and persist a new <see cref="T:EmbeddedSystems.DomainModel.KnowledgeLevel"/>.
            </summary>
            <param name="knowledgeLevelDesc">A new <see cref="T:EmbeddedSystems.DomainModel.KnowledgeLevel"/></param>
            <returns>The persisted <see cref="T:EmbeddedSystems.DomainModel.KnowledgeLevel"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.KnowledgeLevelService.AddKnowledgeLevel(EmbeddedSystems.DomainModel.KnowledgeLevel)">
            <summary>
            Build and persist a new <see cref="T:EmbeddedSystems.DomainModel.KnowledgeLevel"/>.
            </summary>
            <param name="knowledgeLevel">A new <see cref="T:EmbeddedSystems.DomainModel.KnowledgeLevel"/></param>
            <returns>The persisted <see cref="T:EmbeddedSystems.DomainModel.KnowledgeLevel"/>.</returns>
        </member>
        <member name="T:EmbeddedSystems.ServiceLayer.LanguageService">
            <summary>
            A class for interacting with <see cref="T:EmbeddedSystems.DomainModel.Language"/>s.
            </summary>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.LanguageService.#ctor(EmbeddedSystems.Persistence.IUnitOfWork)">
            <summary>
            Initialises a new instance of the <see cref="T:EmbeddedSystems.ServiceLayer.LanguageService"/> class.
            </summary>
            <param name="persistence">The current persistence context.</param>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.LanguageService.GetLanguage(System.Int32)">
            <summary>
            Retrieve a <see cref="T:EmbeddedSystems.DomainModel.Language"/>.
            </summary>
            <param name="languageId">The unique identifier of the <see cref="T:EmbeddedSystems.DomainModel.Language"/>.</param>
            <returns>The <see cref="T:EmbeddedSystems.DomainModel.Language"/> that matches the given <paramref name="languageId"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.LanguageService.GetAll">
            <summary>
            Retrieve all <see cref="T:EmbeddedSystems.DomainModel.Language"/>s.
            </summary>
            <returns>All of the <see cref="T:EmbeddedSystems.DomainModel.Language"/>s in the DB.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.LanguageService.AddLanguage(System.String)">
            <summary>
            Build and persist a new <see cref="T:EmbeddedSystems.DomainModel.Language"/>.
            </summary>
            <param name="languageName">A new <see cref="T:EmbeddedSystems.DomainModel.Language"/></param>
            <returns>The persisted <see cref="T:EmbeddedSystems.DomainModel.Language"/>.</returns>
        </member>
        <member name="M:EmbeddedSystems.ServiceLayer.LanguageService.AddLanguage(EmbeddedSystems.DomainModel.Language)">
            <summary>
            Build and persist a new <see cref="T:EmbeddedSystems.DomainModel.Language"/>.
            </summary>
            <param name="language">A new <see cref="T:EmbeddedSystems.DomainModel.Language"/></param>
            <returns>The persisted <see cref="T:EmbeddedSystems.DomainModel.Language"/>.</returns>
        </member>
    </members>
</doc>
